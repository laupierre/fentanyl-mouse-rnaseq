#!/bin/bash
#PBS -l walltime=20:00:00
#PBS -l nodes=1:ppn=12
#PBS -q workq
#PBS -j oe
#PBS -N fentanyl

cd $PBS_O_WORKDIR

CONTAINER=/projects/ncrrbt_share_la/dev_pipe
INDEX=/projects/ncrrbt_share_la/dev_pipe
CPUS=12


########
## BBMap

cp /projects/ncrrbt_share_la/dev_pipe/mouse_ribosomal.fa .

var=(`ls *_R1*.fastq.gz`)

	for i in ${var[@]}
	do
	read2=`echo ${i} | sed 's/R1/R2/g'`
	prefix=`echo ${i%%_R1*}`
	
	apptainer exec $CONTAINER/bbmap.sif /bin/bash -c \
        "bbduk.sh threads=$CPUS in=$i out1=$prefix\_R1_001.filtered.fastq ref=mouse_ribosomal.fa k=31 overwrite=t"
		
	## Put this inside the loop
	if [ $? -eq 0 ]
	then
    	echo "bbmap processed sample ${prefix}" >> log.out
	else
	echo "bbmap failed on sample ${prefix}. Pipeline terminated"  >> log.out
	exit 1
	fi
done
	

ls *filtered.fastq | parallel -j 2 pigz -p 6 {}
mkdir projects
mv *filtered.fastq.gz projects
cd projects



#######
## STAR


## This STAR index was created with mouse_star_index.pbs for 50 nts reads
cp -r ../mouse_star_index .

var=(`ls *_R1*.fastq.gz`)

	for i in ${var[@]}
	do
	read2=`echo ${i} | sed 's/R1/R2/g'`
	prefix=`echo ${i%%_R1*}`
	
	apptainer exec $CONTAINER/star.sif /bin/bash -c \
	"STAR --genomeDir mouse_star_index --runThreadN $CPUS \
	--readFilesIn $i \
	--outSAMtype BAM Unsorted \
	--readFilesCommand zcat \
	--outFileNamePrefix star.${prefix}"

	## Put this inside the loop
	if [ $? -eq 0 ]
	then 
    	echo "STAR processed sample ${prefix}" >> log.out
	else
	echo "STAR failed on sample ${prefix}. Pipeline terminated"  >> log.out
	exit 1
	fi
done


mkdir star_results
mv star.* star_results
cd star_results



#######
## FeatureCounts

wget https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M32/gencode.vM32.annotation.gtf.gz
gunzip gencode.vM32.annotation.gtf.gz

files=`ls -d *bam | xargs -n1000`

apptainer exec $CONTAINER/featurecounts.sif /bin/bash -c \
"featureCounts -B -C -s 2 -T $CPUS -t exon -g gene_id --extraAttributes gene_name,gene_type \
-a gencode.vM32.annotation.gtf \
-o subread.counts.txt $files" || { 
echo "featureCounts has an error. Pipeline terminated" >> log.out
exit 1
}


cd ..
mkdir rseqc_results
cd rseqc_results



######
## RSeQC and Sambamba

wget https://sourceforge.net/projects/rseqc/files/BED/Mouse_Mus_musculus/GRCm39_GENCODE_VM27.bed.gz
gunzip GRCm39_GENCODE_VM27.bed.gz

var=(`ls ../star_results/*bam`)

	for i in ${var[@]}
	do
	prefix=`echo ${i%%_S*}`
	prefix2=`echo ${prefix##*/}`
	apptainer exec $CONTAINER/sambamba.sif /bin/bash -c \
	"sambamba markdup -t $CPUS $i $prefix2.markdup.bam > markdup.$prefix2.log 2>&1" || { 
   	echo "Sambamba has an error. Pipeline terminated" >> log.out
    	exit 1
	}
	done


var=(`ls *.bam`)	
	
	for i in ${var[@]}
	do
	prefix=`echo ${i%%.bam}`
	apptainer exec $CONTAINER/rseqc.sif /bin/bash -c \
	"infer_experiment.py -r GRCm39_GENCODE_VM27.bed -i $i 1> rseqc.$prefix.infer_experiment.txt" || { 
   	echo "RSeQC has an error. Pipeline terminated" >> log.out
    	exit 1
	}
	done


cd ..



#######
## FastQC

files=`ls *fastq.gz | xargs -n1000`
mkdir fastqc_results

        apptainer exec $CONTAINER/fastqc.sif /bin/bash -c \
	"fastqc -t $CPUS -o fastqc_results $files" || { 
   	echo "FastQC has an error. Pipeline terminated" >> log.out
    	exit 1
	}




#######
## MultiQC

apptainer exec $CONTAINER/multiqc.sif /bin/bash -c \
"multiqc -f -n multiqc_report_rnaseq \
-m featureCounts $PBS_O_WORKDIR/projects/star_results/*summary \
-m star $PBS_O_WORKDIR/projects/star_results/*Log.final.out \
-m sambamba $PBS_O_WORKDIR/projects/rseqc_results/markdup.star*.log \
-m rseqc $PBS_O_WORKDIR/projects/rseqc_results/*infer_experiment.txt \
-m fastqc $PBS_O_WORKDIR/projects/fastqc_results/*zip" || { 
echo "MultiQC has an error. Pipeline terminated" >> log.out
exit 1
}















